"""
Django settings for Umuryango project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9hl*trklmh*!_m2xng031_qz)8%a3+!xzw$=3&_^ubm$d3uql!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '172.31.201.93','gihozo.pythonanywhere.com']



# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
"admin_interface",
    "colorfield",  
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     'crouirouge',
      'django_extensions',
    'rest_framework',
    'corsheaders',
    'api',
 'rest_framework_simplejwt',
 'rest_framework_simplejwt.token_blacklist', 
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



AUTHENTICATION_BACKENDS = [
    'crouirouge.backend.EmailBackend',  # Custom backend
    'django.contrib.auth.backends.ModelBackend',  # Default
]





SITE_URL = "http://localhost:5173"

ROOT_URLCONF = 'Umuryango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
          'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Umuryango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication', 
        'rest_framework.authentication.BasicAuthentication',
         'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication'
        
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}


SIMPLE_JWT = {
     'ACCESS_TOKEN_LIFETIME': timedelta(minutes=10),
     'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
     'ROTATE_REFRESH_TOKENS': True,
     'BLACKLIST_AFTER_ROTATION': True
}



CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:8000",
     "https://gihozo.pythonanywhere.com",

   
    
]
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",

]
CORS_ORIGIN_ALLOW_ALL = True 
# Session settings
SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Use database-backed sessions
SESSION_COOKIE_NAME = "sessionid"  # Default session cookie name
# Set session expiration time (24 hours)
SESSION_COOKIE_AGE = 86400   # 2 weeks in seconds
SESSION_SAVE_EVERY_REQUEST = True  # Save the session on every request
SESSION_COOKIE_SECURE = False  # Set to True if using HTTPS
SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access to the cookie
SESSION_COOKIE_SAMESITE = "Lax"  # Prevent cross-site request forgery 
CSRF_COOKIE_NAME = 'csrftoken'
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Keep session even if browser is closed
CSRF_COOKIE_SAMESITE = "Lax" 
CSRF_COOKIE_SECURE = False  
CSRF_COOKIE_HTTPONLY = False  # Ensure this is set to False to allow JavaScript access
CSRF_COOKIE_SAMESITE = 'Lax'   # Use 'None' if cross-domain

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Collects all static files here

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Any custom static files
]



MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'crouirouge.User'



# import logging
# import sys

# logging.getLogger("django.server").addFilter(
#     lambda record: "Broken pipe" not in record.getMessage()
# )

# JAZZMIN_UI_TWEAKS = {

#     "theme": "darkly",
# }